{
	"info": {
		"_postman_id": "03939bfa-dde8-460c-b31d-9c1baa8887a5",
		"name": "STSTStudentCourse",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "29184252"
	},
	"item": [
		{
			"name": "Get All Todo Entries",
			"item": [
				{
					"name": "Get All Todo Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"console.log(jsonData.success)\r",
									"pm.test(\"verify that success should be false\", function () {\r",
									"        pm.expect(jsonData.success).to.eql(false);\r",
									"    });\r",
									"    \r",
									"pm.test(\"verify that the message is Unknown Location\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Unknown location\");\r",
									"});\r",
									"\r",
									"pm.test(\"confirm that body contains title\", function () {\r",
									"    pm.expect(pm.response.text).to.include(\"title\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/Todo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"Todo"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"console.log(jsonData.success)",
							"pm.test(\"verify that success should be false\", function () {",
							"        pm.expect(jsonData.success).to.eql(false);",
							"    });",
							"    ",
							"pm.test(\"verify that the message is Unknown Location\", function () {",
							"    pm.expect(jsonData.message).to.eql(\"Unknown location\");",
							"});",
							"",
							"pm.test(\"confirm that body contains title\", function () {",
							"    pm.expect(pm.response.text).to.include(\"title\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get All Entries",
			"item": [
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"verify that body contains apiVersion\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"apiVersion\");\r",
									"});\r",
									"pm.test(\"verify that apiversion is 7.1.4.0\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.apiVersion).to.eql(\"7.1.4.0\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "pm.test(\"Status code should be 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\npm.test(\"Status code name should have an OK string\", function () {\r\n    pm.response.to.have.status(\"OK\");\r\n});\r\n\r\nvar jsonData = pm.response.json();\r\nconsole.log(jsonData.title)\r\n\r\npm.test(\"verify that title is Fusio\", function () {\r\n    pm.expect(jsonData.title).to.eql(\"Fusio\");\r\n    });\r\n    \r\npm.test(\"verify that paymentCurrency is EUR\", function () {\r\n\r\n    pm.expect(jsonData.paymentCurrency).to.eql(\"EUR\");\r\n});\r\n\r\npm.test(\"confirm that body contains categories\", function () {\r\n    pm.expect(pm.response.text()).to.include(\"categories\");\r\n   }); ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}",
							"host": [
								"{{baseUrl}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get entry per ID",
			"item": [
				{
					"name": "Get entry per ID - Valid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"verify that body contains apiVersion\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"apiVersion\");\r",
									"});\r",
									"pm.test(\"verify that apiversion is 7.1.4.0\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.apiVersion).to.eql(\"7.1.4.0\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "pm.test(\"Status code should be 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\npm.test(\"Status code name should have an OK string\", function () {\r\n    pm.response.to.have.status(\"OK\");\r\n});\r\n\r\nvar jsonData = pm.response.json();\r\nconsole.log(jsonData.title)\r\n\r\npm.test(\"verify that title is Fusio\", function () {\r\n    pm.expect(jsonData.title).to.eql(\"Fusio\");\r\n    });",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}",
							"host": [
								"{{baseUrl}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				},
				{
					"name": "Get entry per ID - Invalid ID(params not using TODO ID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code should have an OK string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"verify that body contains apiVersion\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"apiVersion\");\r",
									"});\r",
									"pm.test(\"verify that apiversion is 7.1.4.0\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.apiVersion).to.eql(\"7.1.4.0\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"strictSSL": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}",
							"host": [
								"{{baseUrl}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Books",
			"item": [
				{
					"name": "Get All Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlbooks}}/books",
							"host": [
								"{{baseUrlbooks}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlbooks}}/books/:bookId",
							"host": [
								"{{baseUrlbooks}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "bookId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books by Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrlbooks}}/books?type=fiction",
							"host": [
								"{{baseUrlbooks}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "type",
									"value": "fiction"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Place a book order",
			"item": [
				{
					"name": "Place a book order - using book ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const OrderID = pm.response.json();\r",
									"console.log(OrderID.orderId);\r",
									"pm.environment.set(\"OrderId\", \"OrderID.orderId\");\r",
									"\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Status code name have an Unauthorized string\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"pm.test(\"Verify that Undefined is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.Undefined).to.eql(true);\r",
									"});\r",
									"pm.test(\"Body contains orgerId string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"orderId\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": 1,\n    \"customerName\": \"Testify Academy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrlbooks}}/orders"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get an order",
			"item": [
				{
					"name": "Get all orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlbooks}}/orders",
							"host": [
								"{{baseUrlbooks}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order - using orderID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlbooks}}/:orderId",
							"host": [
								"{{baseUrlbooks}}"
							],
							"path": [
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "AaX7WGCUeHH3lRwGRh57M"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update an order",
			"item": [
				{
					"name": "Update an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": 1,\n    \"customerName\": \"Testify Academy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlbooks}}orders/",
							"host": [
								"{{baseUrlbooks}}orders"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete an order",
			"item": [
				{
					"name": "Delete an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrlbooks}}orders/:orderId",
							"host": [
								"{{baseUrlbooks}}orders"
							],
							"path": [
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "rObASEWYlVrRX6cTAEgbt"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Register API Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": {
						"accessTokenUrl": "https://demo.fusio-project.org/",
						"tokenName": "Authority",
						"client_authentication": "header",
						"grant_type": "client_credentials",
						"addTokenTo": "header"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"clientName\": \"Ibironke\",\n   \"clientEmail\": \"ibironkeyekinni@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrlbooks}}/api-clients/",
					"host": [
						"{{baseUrlbooks}}"
					],
					"path": [
						"api-clients",
						""
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get API Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{baseUrlbooks}}/status"
			},
			"response": []
		}
	]
}